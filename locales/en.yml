en:
  vagrant_xhyve:
    actions:
      vm:
        boot:
          booting_sudo: |-
            You may be asked to enter root password in the next step
            to create network interface. This limitation will be
            lifted once Xhyve binary and helper tool is code-signed.

        halt:
          force: |-
            Forcing shutdown of VM...

        resume:
          not_supported: |-
            Resuming is not supported.

        suspend:
          not_supported: |-
            Suspending is not supported.

    commands:
      common:
        vm_already_running: |-
          Xhyve instance is already running.

        vm_not_created: |-
          VM not created. Moving on...

        vm_not_running: |-
          Xhyve instance is not currently running. Please first bring it
          up with `vagrant up` then run this command.

    errors:
      ip_address_not_available: |-
        Vagrant-Xhyve could not obtain the IP address of the VM. This may
        be due to the DHCP leases (/var/db/dhcpd_leases) is in a corrupted
        state or no network interface was attached to the VM.

      vmnet_not_available: |-
        Vagrant-Xhyve could not obtain the MAC address from Vmnet. This is
        usually caused by lack of permission or there is an instance of
        this VM already running.

        If this box is new, it could be due to Vmnet could not recognize
        the machine UUID. In this case, running `vagrant destroy` and
        run `vagrant up` again should help.

      xhyve_not_detected: |-
        Xhyve could not be detected on this machine. You can install Xhyve
        using Homebrew with `brew install xhyve` or follow instructions in
        https://github.com/mist64/xhyve. If Xhyve is already installed,
        make sure `xhyve` binary is in $PATH.

    states:
      short_not_created: |-
        not created

      long_not_created: |-
        The environment has not yet been created. Run `vagrant up` to
        create the environment.

      short_not_running: |-
        not running

      long_not_running: |-
        The VM is powered off. To restart the VM, run `vagrant up`

      short_running: |-
        running

      long_running: |-
        The VM is running. To stop this VM, you can run `vagrant halt` to
        shut it down forcefully. To start it again, simply run `vagrant up`.
